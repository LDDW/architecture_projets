services:
  traefik:
    image: "traefik:v3.2"
    container_name: "traefik"
    command:
      - "--log.level=DEBUG"
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entryPoints.web.address=:80"
      - "--entryPoints.websecure.address=:443"
      - "--certificatesresolvers.myresolver.acme.tlschallenge=true"
      - "--certificatesresolvers.myresolver.acme.email=postmaster@example.com"
      - "--certificatesresolvers.myresolver.acme.storage=/letsencrypt/acme.json"
    ports:
      - "80:80"
      - "8080:8080"
      - "443:443"
    volumes:
      - "./letsencrypt:/letsencrypt"
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      - "./traefik/:/var/log/traefik"
    networks:
      - web

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    restart: unless-stopped
    volumes:
      - "./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml"
      - prometheus_data:/prometheus
    command:
      - "--web.enable-lifecycle"
      - "--config.file=/etc/prometheus/prometheus.yml"
      - "--storage.tsdb.path=/prometheus"
      - "--web.console.libraries=/etc/prometheus/console_libraries"
      - "--web.console.templates=/etc/prometheus/consoles"
    ports:
      - "9090:9090"
    labels:
      - traefik.enable=true
    links:
      - node-exporter:node-exporter
    networks:
      - monitoring

  grafana:
    image: grafana/grafana
    container_name: grafana
    ports:
      - "3000:3000"
    restart: unless-stopped
    volumes:
      - grafana_data:/var/lib/grafana
    labels:
      - traefik.enable=true
    networks:
      - monitoring

  node-exporter:
    image: prom/node-exporter:latest
    container_name: node-exporter
    restart: unless-stopped
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - "--path.procfs=/host/proc"
      - "--path.rootfs=/rootfs"
      - "--path.sysfs=/host/sys"
    ports:
      - "9100:9100"
    networks:
      - monitoring

  # ========== PROJECTS ========== #
  app1:
    restart: always
    image: "nginx:alpine"
    container_name: "app1"
    volumes:
      - "./projects/website_1:/usr/share/nginx/html/website_1"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.app1.rule=Host(`45.147.98.249`) && PathPrefix(`/app1`)"
      - "traefik.http.routers.app1.entrypoints=websecure"
      - "traefik.http.routers.app1.tls.certresolver=myresolver"
    ports:
      - "8081:80"
    networks:
      - web

  app2:
    restart: always
    image: "nginx:alpine"
    container_name: "app2"
    volumes:
      - "./projects/website_2:/usr/share/nginx/html/website_2"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.app2.rule=Host(`45.147.98.249`) && PathPrefix(`/app2`)"
      - "traefik.http.routers.app2.entrypoints=websecure"
      - "traefik.http.routers.app2.tls.certresolver=myresolver"
    ports:
      - "8082:80"
    networks:
      - web

volumes:
  prometheus_data: {}
  grafana_data: {}

networks:
  web:
    external: true
  monitoring: